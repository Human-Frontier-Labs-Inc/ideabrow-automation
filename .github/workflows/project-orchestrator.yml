name: Project Orchestrator

on:
  push:
    paths:
      - 'projects/**/requirements/**'

jobs:
  process-new-project:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit to detect new directories
      
      - name: Detect new project directory
        id: detect
        run: |
          # Get changed files
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep "^projects/.*/requirements/.*\.md$" || true)
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No new requirements detected"
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Extract project name from first changed file
          PROJECT_PATH=$(echo "$CHANGED_FILES" | head -1 | cut -d'/' -f1-2)
          PROJECT_NAME=$(basename "$PROJECT_PATH")
          
          echo "Detected new project: $PROJECT_NAME"
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "project_path=$PROJECT_PATH" >> $GITHUB_OUTPUT
          echo "skip=false" >> $GITHUB_OUTPUT
      
      - name: Setup Python
        if: steps.detect.outputs.skip != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        if: steps.detect.outputs.skip != 'true'
        run: |
          pip install openai
          pip install PyGithub
          pip install requests
      
      - name: Generate Progress Tracker
        if: steps.detect.outputs.skip != 'true'
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          python automated-dev-orchestrator/scripts/generate_tracker.py \
            --project-path "${{ steps.detect.outputs.project_path }}" \
            --output PROGRESS_TRACKER.md \
            --project-name "${{ steps.detect.outputs.project_name }}"
      
      - name: Create metadata file
        if: steps.detect.outputs.skip != 'true'
        run: |
          # Extract summary from first requirements file
          FIRST_FILE=$(find ${{ steps.detect.outputs.project_path }} -name "*.md" | head -1)
          SUMMARY=$(head -20 "$FIRST_FILE" | tr '\n' ' ' | cut -c1-200)
          
          # Try to detect framework from requirements
          TEMPLATE="generic"
          if grep -qi "react\|next" "$FIRST_FILE"; then
            TEMPLATE="react-typescript"
          elif grep -qi "python\|django\|flask" "$FIRST_FILE"; then
            TEMPLATE="python-web"
          elif grep -qi "node\|express" "$FIRST_FILE"; then
            TEMPLATE="node-express"
          fi
          
          cat > metadata.json <<EOF
          {
            "summary": "$SUMMARY",
            "template": "$TEMPLATE"
          }
          EOF
      
      - name: Create GitHub Repository
        if: steps.detect.outputs.skip != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          python automated-dev-orchestrator/scripts/create_repo.py \
            --tracker PROGRESS_TRACKER.md \
            --project-name "${{ steps.detect.outputs.project_name }}" \
            --org Human-Frontier-Labs-Inc \
            --webhook-url "${{ secrets.DEV_SERVER_WEBHOOK_URL }}" \
            --metadata metadata.json \
            --requirements-path "${{ steps.detect.outputs.project_path }}/requirements"
      
      - name: Summary
        if: steps.detect.outputs.skip != 'true'
        run: |
          echo "## Project Orchestrator Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… **Project**: ${{ steps.detect.outputs.project_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Actions Completed:" >> $GITHUB_STEP_SUMMARY
          echo "- Generated progress tracker from requirements" >> $GITHUB_STEP_SUMMARY
          echo "- Created new development repository" >> $GITHUB_STEP_SUMMARY
          echo "- Triggered development server webhook" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "Development environment will be automatically created on the server." >> $GITHUB_STEP_SUMMARY