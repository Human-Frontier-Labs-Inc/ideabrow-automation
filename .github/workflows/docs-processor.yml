name: Documentation Processor

on:
  push:
    branches: [main]

jobs:
  process-documentation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Check if docs folder exists
        id: check_docs
        run: |
          if [ -d "docs" ]; then
            echo "docs_exists=true" >> $GITHUB_OUTPUT
            echo "Found docs folder - proceeding with processing"
          else
            echo "docs_exists=false" >> $GITHUB_OUTPUT
            echo "No docs folder found - skipping workflow"
          fi
      
      - name: Setup Python
        if: steps.check_docs.outputs.docs_exists == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        if: steps.check_docs.outputs.docs_exists == 'true'
        run: |
          pip install openai
          pip install PyGithub
          pip install requests
          pip install python-dotenv
      
      - name: Generate Progress Tracker and Extract Project Name
        if: steps.check_docs.outputs.docs_exists == 'true'
        id: generate_tracker
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          # Generate tracker and extract project name
          OUTPUT=$(python automated-dev-orchestrator/scripts/generate_tracker.py \
            --project-path docs \
            --output PROGRESS_TRACKER.md \
            --extract-project-name)
          
          # Extract project name from output
          PROJECT_NAME=$(echo "$OUTPUT" | grep "PROJECT_NAME:" | cut -d':' -f2 | xargs)
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          
          echo "Generated progress tracker for project: $PROJECT_NAME"
      
      - name: Create timestamp
        if: steps.check_docs.outputs.docs_exists == 'true'
        id: timestamp
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d-%H%M%S")
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
      
      - name: Create metadata file
        if: steps.check_docs.outputs.docs_exists == 'true'
        run: |
          # Extract summary from first doc file
          FIRST_FILE=$(find docs -name "*.md" | head -1)
          if [ -n "$FIRST_FILE" ]; then
            SUMMARY=$(head -20 "$FIRST_FILE" | tr '\n' ' ' | cut -c1-200)
          else
            SUMMARY="Auto-generated project"
          fi
          
          # Try to detect framework
          TEMPLATE="generic"
          if grep -qi "react\|next" docs/*.md 2>/dev/null; then
            TEMPLATE="react-typescript"
          elif grep -qi "python\|django\|flask" docs/*.md 2>/dev/null; then
            TEMPLATE="python-web"
          elif grep -qi "node\|express" docs/*.md 2>/dev/null; then
            TEMPLATE="node-express"
          fi
          
          cat > metadata.json <<EOF
          {
            "summary": "$SUMMARY",
            "template": "$TEMPLATE",
            "processed_at": "${{ steps.timestamp.outputs.timestamp }}"
          }
          EOF
      
      - name: Create GitHub Repository
        if: steps.check_docs.outputs.docs_exists == 'true'
        id: create_repo
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          python automated-dev-orchestrator/scripts/create_repo.py \
            --tracker PROGRESS_TRACKER.md \
            --project-name "${{ steps.generate_tracker.outputs.project_name }}" \
            --org Human-Frontier-Labs-Inc \
            --webhook-url "${{ secrets.DEV_SERVER_WEBHOOK_URL }}" \
            --metadata metadata.json \
            --requirements-path docs
      
      - name: Archive processed documentation
        if: steps.check_docs.outputs.docs_exists == 'true'
        run: |
          # Create archive directory
          ARCHIVE_NAME="${{ steps.generate_tracker.outputs.project_name }}-${{ steps.timestamp.outputs.timestamp }}"
          mkdir -p "processed-originals/$ARCHIVE_NAME"
          
          # Move docs to archive
          cp -r docs/* "processed-originals/$ARCHIVE_NAME/"
          
          # Add metadata about processing
          cat > "processed-originals/$ARCHIVE_NAME/PROCESSING_INFO.md" <<EOF
          # Processing Information
          
          - **Project Name**: ${{ steps.generate_tracker.outputs.project_name }}
          - **Processed At**: ${{ steps.timestamp.outputs.timestamp }}
          - **Repository Created**: https://github.com/Human-Frontier-Labs-Inc/${{ steps.generate_tracker.outputs.project_name }}
          - **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          EOF
          
          echo "Archived documentation to processed-originals/$ARCHIVE_NAME"
      
      - name: Cleanup and commit changes
        if: steps.check_docs.outputs.docs_exists == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Configure git
          git config --global user.email "automation@ideabrow.com"
          git config --global user.name "Ideabrow Automation"
          
          # Remove original docs folder
          rm -rf docs
          
          # Add archived files and removal
          git add processed-originals/
          git add -u docs
          
          # Commit changes
          git commit -m "Process documentation for ${{ steps.generate_tracker.outputs.project_name }}

          - Generated progress tracker
          - Created repository: ${{ steps.generate_tracker.outputs.project_name }}
          - Archived original docs to processed-originals/
          - Cleaned up docs folder for next automation run"
          
          # Push changes using PAT
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git push origin main
      
      - name: Summary
        if: steps.check_docs.outputs.docs_exists == 'true'
        run: |
          echo "## Documentation Processing Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… **Project**: ${{ steps.generate_tracker.outputs.project_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Actions Completed:" >> $GITHUB_STEP_SUMMARY
          echo "- Generated progress tracker from /docs" >> $GITHUB_STEP_SUMMARY
          echo "- Created repository: ${{ steps.generate_tracker.outputs.project_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Archived docs to: processed-originals/${{ steps.generate_tracker.outputs.project_name }}-${{ steps.timestamp.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cleaned up /docs folder" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "The /docs folder is now ready for the next automation push." >> $GITHUB_STEP_SUMMARY